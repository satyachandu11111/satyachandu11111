<?xml version="1.0" encoding="UTF-8"?>
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AmazonCheckoutCancelledThenSuccess" extends="AmazonCheckoutButton">
        <annotations>
            <stories value="Amazon Checkout Cancelled then Successful"/>
            <title value="Amazon Checkout Cancelled then Successful"/>
            <description value="User should be able to checkout with Amazon Pay after cancelling their checkout session."/>
            <severity value="CRITICAL"/>
            <group value="amazon_pay_disabled"/>
            <group value="amazon_pay_checkout"/>
        </annotations>

        <!--Go to Amazon Pay from the checkout and login-->
        <click selector="{{AmazonButtonSection.checkout}}" stepKey="clickAmazonButton"/>
        <actionGroup ref="AmazonLoginActionGroup" stepKey="AmazonLoginActionGroup"/>

        <click selector="{{AmazonPageSection.cancelButton}}" stepKey="cancelCheckout"/>
        <waitForPageLoad stepKey="waitForCheckoutPageLoad"/>

        <!--Go back to Amazon Pay from the checkout and login-->
        <click selector="{{AmazonButtonSection.checkout}}" stepKey="clickAmazonButton2"/>
        <actionGroup ref="AmazonAlreadyLoggedInActionGroup" stepKey="AmazonLoginActionGroup2"/>
        <!--Come back to checkout with default address-->
        <actionGroup ref="AmazonCheckoutActionGroup" stepKey="DefaultAmazonCheckoutActionGroup2"/>

        <!-- Get the current checkout session ID -->
        <executeJS function="return localStorage.getItem('amzn-checkout-session')" stepKey="getCheckoutSession2"/>

        <!-- Ensure we have an active checkout session by clicking Edit address -->
        <click selector="{{AmazonCheckoutSection.editShippingButton}}" stepKey="clickAmazonEditShippingButton"/>
        <waitForElement selector="{{AmazonPageSection.checkoutButton}}" stepKey="waitForCancelCheckout2"/>
        <click selector="{{AmazonPageSection.cancelButton}}" stepKey="cancelCheckout2"/>
        <waitForPageLoad stepKey="waitForCheckoutPageLoad2"/>

        <!--Go back to Amazon Pay from the checkout and login-->
        <click selector="{{AmazonButtonSection.checkout}}" stepKey="clickAmazonButton3"/>
        <actionGroup ref="AmazonAlreadyLoggedInActionGroup" stepKey="AmazonLoginActionGroup3"/>
        <!--Come back to checkout with default address-->
        <actionGroup ref="AmazonCheckoutActionGroup" stepKey="DefaultAmazonCheckoutActionGroup3"/>
        <waitForPageLoad stepKey="waitForCheckoutPageLoad3"/>

        <!-- Get the current checkout session ID and make sure it changed -->
        <executeJS function="return localStorage.getItem('amzn-checkout-session')" stepKey="getCheckoutSession3"/>
        <assertNotEquals stepKey="verifyChangedSession2">
            <actualResult type="const">$getCheckoutSession3</actualResult>
            <expectedResult type="const">$getCheckoutSession2</expectedResult>
        </assertNotEquals>

        <!--Go to payment method-->
        <click selector="{{CheckoutShippingSection.next}}" stepKey="clickCheckoutShippingNext"/>
        <waitForPageLoad stepKey="waitForCheckoutPaymentPageLoad"/>

        <click selector="{{AmazonCheckoutSection.editPaymentButton}}" stepKey="clickEditPaymentButton"/>
        <waitForElement selector="{{AmazonPageSection.checkoutButton}}" stepKey="waitForContinueButton"/>
        <click selector="{{AmazonPageSection.cancelButton}}" stepKey="cancelCheckout3"/>
        <waitForPageLoad stepKey="waitForCheckoutPageLoad4"/>

        <!--Go back to Amazon Pay from the checkout and login-->
        <click selector="{{AmazonButtonSection.checkout}}" stepKey="clickAmazonButton4"/>
        <actionGroup ref="AmazonAlreadyLoggedInActionGroup" stepKey="AmazonLoginActionGroup4"/>
        <!--Come back to checkout with default address-->
        <actionGroup ref="AmazonCheckoutActionGroup" stepKey="DefaultAmazonCheckoutActionGroup4"/>
        <waitForPageLoad stepKey="waitForCheckoutPageLoad5"/>

        <!-- Get the current checkout session ID and make sure it changed -->
        <executeJS function="return localStorage.getItem('amzn-checkout-session')" stepKey="getCheckoutSession4"/>
        <assertNotEquals stepKey="verifyChangedSession3">
            <actualResult type="const">$getCheckoutSession4</actualResult>
            <expectedResult type="const">$getCheckoutSession3</expectedResult>
        </assertNotEquals>

        <!--Go to payment method, edit payment, then proceed-->
        <click selector="{{CheckoutShippingSection.next}}" stepKey="clickCheckoutShippingNext2"/>
        <waitForPageLoad stepKey="waitForCheckoutPaymentPageLoad2"/>
        <click selector="{{AmazonCheckoutSection.editPaymentButton}}" stepKey="clickEditPaymentButton2"/>
        <waitForElement selector="{{AmazonPageSection.checkoutButton}}" stepKey="waitForContinueButton2"/>
        <click selector="{{AmazonPageSection.checkoutButton}}" stepKey="clickAmazonCheckoutButton2"/>
        <waitForElement selector="{{CheckoutPaymentSection.availablePaymentSolutions}}" stepKey="waitForCheckoutPaymentPageLoad3"/>

        <!--Verify only Amazon Pay method is visible-->
        <seeNumberOfElements selector="{{CheckoutPaymentSection.availablePaymentSolutions}}" userInput="1" stepKey="seeSingleAvailablePaymentSolution"/>
        <seeElement selector="{{AmazonCheckoutSection.method}}" stepKey="seeAmazonPaymentMethod"/>
        <!--Place order-->
        <actionGroup ref="CheckoutPlaceOrderActionGroup" stepKey="guestPlaceorder">
            <argument name="orderNumberMessage" value="CONST.successGuestCheckoutOrderNumberMessage" />
            <argument name="emailYouMessage" value="CONST.successCheckoutEmailYouMessage" />
        </actionGroup>
    </test>
</tests>
